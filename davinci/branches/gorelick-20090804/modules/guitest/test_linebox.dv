define updateLeftMask ()
{
	scale = $1;
	lmaskpos = $2;
	line = $3;
	val = float(gui.get(scale).value) / 100.0;
	dnMin = gui.get(line).histXMin;
	dnMax = gui.get(line).histXMax;
	dn = val * (dnMax - dnMin) + dnMin;
	if (val == 0.0) {
		gui.set(line, {showLeftMask="false"});
		gui.set(lmaskpos, {labelString="left mask :"});
	} else {
		gui.set(line, {showLeftMask="true"});
		gui.set(lmaskpos, {labelString=sprintf("left mask : %f",dn)});
	}
	gui.set(line, {leftMask=dn});
}

define updateRightMask ()
{
	scale = $1;
	rmaskpos = $2;
	line = $3;
	val = float(gui.get(scale).value) / 100.0;
	dnMin = gui.get(line).histXMin;
	dnMax = gui.get(line).histXMax;
	dn = val * (dnMax - dnMin) + dnMin;
	if (val == 1.0) {
		gui.set(line, {showRightMask="false"});
		gui.set(rmaskpos, {labelString="right mask:"});
	} else {
		gui.set(line, {showRightMask="true"});
		gui.set(rmaskpos, {labelString=sprintf("right mask: %f",dn)});
	}
	gui.set(line, {rightMask=dn});
}

define motionCB ()
{
	cursorx = $1;
	cursory = $2;
	line = $3;
	gui.set (cursorx, {labelString=sprintf("pointer.x : %f",gui.get(line).pointer.x)});
	gui.set (cursory, {labelString=sprintf("pointer.y : %f",gui.get(line).pointer.y)});
}

define modeAddCB ()
{
	wid = $1;
	lb = $2;
	if (gui.get(wid).set == "TOGGLE_SET") {
		gui.set (lb, {lineMode=0});
	} else {
		gui.set (wid, {set = "TOGGLE_INDETERMINATE"});
	}
}

define modeMovCB ()
{
	wid = $1;
	lb = $2;
	if (gui.get(wid).set == "TOGGLE_SET") gui.set (lb, {lineMode=1});
}

define modeDelCB ()
{
	wid = $1;
	lb = $2;
	if (gui.get(wid).set == "TOGGLE_SET") gui.set (lb, {lineMode=2});
}

load_module('gui')

top = gui.create('top');
row = gui.create('rowcolumn',top,{width=100,height=100});
modeBox = gui.create('radioBox',row,{orientation="VERTICAL"})
modeAdd = gui.create('togglebutton',modeBox,{labelString="Add",set="TOGGLE_SET"})
modeMov = gui.create('togglebutton',modeBox,{labelString="Mov"})
modeDel = gui.create('togglebutton',modeBox,{labelString="Del"})
lmaskpos = gui.create('label',row,{labelString="left mask :"});
rmaskpos = gui.create('label',row,{labelString="right mask:"});
cursorx = gui.create('label',row,{labelString="pointer.x :"});
cursory = gui.create('label',row,{labelString="pointer.y :"});
line = gui.create('linebox',row,{width=250,height=250});
lmask = gui.create('scale',row,{orientation="HORIZONTAL",scaleMultiple=1});
rmask = gui.create('scale',row,{orientation="HORIZONTAL",scaleMultiple=1,value=100});

img = load('~/sift/V10161011.qub.png');
gui.set(line, {histogram=histogram(img)});

gui.addcallback (lmask, "valueChanged", sprintf("updateLeftMask(%d,%d,%d)",lmask,lmaskpos,line));
gui.addcallback (rmask, "valueChanged", sprintf("updateRightMask(%d,%d,%d)",rmask,rmaskpos,line));
gui.addcallback (modeAdd, "valueChanged", sprintf("modeAddCB(%d,%d)",modeAdd,line));
gui.addcallback (modeMov, "valueChanged", sprintf("modeMovCB(%d,%d)",modeMov,line));
gui.addcallback (modeDel, "valueChanged", sprintf("modeDelCB(%d,%d)",modeDel,line));
gui.addcallback (line, "motion", sprintf("motionCB(%d,%d,%d)",cursorx,cursory,line));

gui.realize(top);
# gui.addcallback(line,"change","echo('change')");

