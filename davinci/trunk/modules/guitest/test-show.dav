verbose = 1
load_module("gui")

define find_band(obj) {
	bands = obj.qube.band_bin.band_bin_original_band
	for (i = 1 ; i <= length(bands) ; i+=1) {
		if (bands[i] == $1) return(i);
	}
	return(1)
}

define stretch() {
	a = $1
	b = moment(a)
	c = (((a - b[1]) / (b[2]-b[1])) * 255)
	return(byte(c));
}

define showVicar(widgetMap) {
	fileName = $1
	data = load_pds(fileName)
	band = find_band(obj = data, 9)
	data = data.qube.data[,,band]
	data[where data < 0] = 0
	data = stretch(data)
	vtop = gui.create("topLevelShell", name=fileName)
	vicar = gui.create("vicar", vtop, { image = data })
	gui.set(vicar, { inputMode = "MODE_SELECT" })
	gui.realize(vtop)
}

define cb_show () {
	list_id = $1;
	fileName = gui.get(list_id).selectedItems[,1]
	showVicar(fileName)
}

define guishow() {
	items = $1
	if (HasValue(items) == 0 || format(items) != "TEXT") {
		printf("Error: expecting TEXT argument\n")
		return(0)
	}
	top = gui.create("topLevelShell", name="Davinci")
	list = gui.create("list", top)
	gui.addcallback (list, "defaultAction", sprintf("cb_show(%d)",list));
	gui.set(list, { items = items })
	gui.realize(top)
}
