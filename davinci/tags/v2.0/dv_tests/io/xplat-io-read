dir="xplat-io"

# 1
tascii=create(100,100,3,format=float)
ascii=ascii(dir+"/test.ascii",format=float)
if (equals(tascii,ascii)) fremove(dir+"/test.ascii");

# 2
testimg=create(300,200,256,format=byte,start=0,step=0)
for(i=1;i<=256;i++) testimg[,,i]=i-1;
isis=read(dir+"/test.isis")
if(equals(testimg,isis)) fremove(dir+"/test.isis")

# 3
x=31; y=21; z=25
testimg=create(x,y,z,org=bsq,format=byte)
for(i=1;i<=z;i++) testimg[,,i]=i-1;

s1=create(1,y,z,org=bsq,format=byte)
for(i=1;i<=z;i++) s1[,,i]=z-(i-1);

s2=create(1,y,z,org=bsq,format=float)
s3=create(1,y,z,org=bsq,format=int)

bot1=create(x,1,z,org=bsq,format=byte)
for(i=1;i<=z;i++) bot1[,,i]=((i-1)*2)%256;

bot2=create(x,1,z,org=bsq,format=float)
bot3=create(x,1,z,org=bsq,format=int)
bot4=create(x,1,z,org=bsq,format=short)

bk1=create(x,y,1,org=bsq,format=byte,start=100,step=0);
bk2=create(x,y,1,org=bsq,format=float);
bk3=create(x,y,1,org=bsq,format=int);

side_planes={ s1=s1, s2=s2, s3=s3 };
bot_planes={ bot1=bot1, bot2=bot2, bot3=bot3, bot4=bot4 };
back_planes={ bk1=bk1, bk2=bk2, bk3=bk3 };

isis=load_pds(dir+"/test-planes.isis",suffix_data=1)

pass = 1;
pass = pass && equals(testimg,isis.qube.data);
pass = pass && length(side_planes) == length(isis.qube.suffix_data.sample);
pass = pass && length(bot_planes) == length(isis.qube.suffix_data.line);
pass = pass && length(back_planes) == length(isis.qube.suffix_data.band);
pass = pass && equals(s1,isis.qube.suffix_data.sample.s1);
pass = pass && equals(s2,isis.qube.suffix_data.sample.s2);
pass = pass && equals(s3,isis.qube.suffix_data.sample.s3);
pass = pass && equals(bot1,isis.qube.suffix_data.line.bot1);
pass = pass && equals(bot2,isis.qube.suffix_data.line.bot2);
pass = pass && equals(bot3,isis.qube.suffix_data.line.bot3);
pass = pass && equals(bot4,isis.qube.suffix_data.line.bot4);
pass = pass && equals(bk1,isis.qube.suffix_data.band.bk1);
pass = pass && equals(bk2,isis.qube.suffix_data.band.bk2);
pass = pass && equals(bk3,isis.qube.suffix_data.band.bk3);

if (pass) fremove(dir+"/test-planes.isis")

# 4
testimg=clone(create(255,1,3,format=byte),y=500)
envi=read(dir+"/test.img")
if(equals(testimg,envi)) fremove(dir+"/test.img")

# 5
fits=create(100,100,1)
fits2=load_fits(dir+"/test.fits")
if(equals(fits,fits2.object_1.data)) fremove(dir+"/test.fits")

# 6
testimg=clone(create(255,1,3,format=byte),y=500)
gif=read(dir+"/test.gif")
if(equals(dim(testimg),dim(gif))) fremove(dir+"/test.gif");

# 7
hdf={}
hdf.lab=create(1000,1,1,format=float)
hdf.labx=create(1000,10,1,format=float)
hdf.i1=1
hdf.s1="foo"
hdf.ss={a=create(100,1,1,format=byte)}
hdf2=read(dir+"/test.hdf")
pass=1
pass=pass && equals(hdf2.lab,hdf.lab)
pass=pass && equals(hdf2.labx,hdf.labx)
pass=pass && equals(hdf2.i1,hdf.i1)
pass=pass && equals(hdf2.s1,hdf.s1)
pass=pass && equals(hdf2.ss,hdf.ss)
if(pass) fremove(dir+"/test.hdf");

# 8
testimg=clone(create(255,1,3,format=byte),y=500)
jpg=read(dir+"/test.jpg")
if(equals(dim(testimg),dim(jpg))) fremove(dir+"/test.jpg");

# 9
testimg=clone(create(255,1,3,format=byte),y=500)
png=read(dir+"/test.png")
if(equals(dim(testimg),dim(png))) fremove(dir+"/test.png");

# 10
testimg=bip(clone(create(255,1,3,format=byte),y=500))
ppm=read(dir+"/test.ppm")
if(equals(dim(testimg),dim(ppm))) fremove(dir+"/test.ppm");

# 11
testimg=clone(create(255,1,3,format=byte),y=500)
png=read(dir+"/test.png")
if(equals(dim(testimg),dim(png))) fremove(dir+"/test.png");

# 12
testimg=clone(create(255,1,3,format=byte),y=500)
vic=read(dir+"/test.vic")
if(equals(testimg,vic)) fremove(dir+"/test.vic")

left_over=syscall("ls -1 "+dir)
if (length(left_over) == 0) exit(0);
exit(1);
